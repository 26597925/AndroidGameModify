1、写一个改变内存地址读写属性的so
结合log，定位到哪一行代码导致的崩溃

2、增加捕获SIGSEGV段错误

3、获取类似第一步log的信息


在Linux中，mprotect()函数可以用来修改一段指定内存区域的保护属性。
函数原型如下：

#include <unistd.h>
#include <sys/mmap.h>
int mprotect(const void *start, size_t len, int prot);

mprotect()函数把自start开始的、长度为len的内存区的保护属性修改为prot指定的值。
prot可以取以下几个值，并且可以用“|”将几个属性合起来使用：
1）PROT_READ：表示内存段内的内容可写；
2）PROT_WRITE：表示内存段内的内容可读；
3）PROT_EXEC：表示内存段中的内容可执行；
4）PROT_NONE：表示内存段中的内容根本没法访问。

需要指出的是，指定的内存区间必须包含整个内存页（4K）。
区间开始的地址start必须是一个内存页的起始地址，并且区间长度len必须是页大小的整数倍。

但是我想做的是只修改4个字节内存块的读写属性，这个函数没法使用？？？或者要修改系统代码？？？


修改安卓内核配置，支持硬件断点，在使用IDA设置硬件断点？？？
